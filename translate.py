# -*- coding: utf-8 -*-
"""translate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rudCsEshGy5pzdEH2oSAKzq3NaB-rMra
"""

def translate_language(lang, scene, debug=False):
    """
    Language translation dictionary
    -------------
    init_dict keys

    k　=　Kinyarwanda
    e　=　English
    f = French
    j = Japanese
    -------------
    Available scene list on 2020_10_14
    
    welcome
    scan_start
    read_message
    time
    correct?
    continue?
    cancel
    total
    subtotal
    can_not_read
    input_error
    thanks
    next
    -------------
    'debug' initial setting is False.
    If you give True, it checks the length of each dictionary and compare to key types,
    returns the result
    """

    init_dict = {
    "k" : {"welcome" : 'murakaza neza!', 
         "scan_start" : 'Gusikana ibicuruzwa, shyira mumwanya wifuza hanyuma ukande "Enter".',
         "read_message" : 'Soma Ikintu: {} Igiciro: {}',
         "time" : '{}[s] yararenganye kugeza igihe ikintu gisomwe.',
         "correct?" : 'Kanda "y" niba ikintu cyasomwe ari cyo, cyangwa "n" niba atari byo. : ',
         "continue?" : 'Kanda "y" kugirango ukomeze gusikana ibintu byose, "Injira" kugirango urebe, cyangwa "x" niba ufite ibintu byo guhagarika. : ',
         "cancel" : 'Injiza umubare wibicuruzwa ushaka guhagarika. : ',
         "total" : 'Igiciro-cyose: {}',
         "subtotal" : 'Subtotal : {}',
         "can_not_read" : 'Ntabwo yasomye neza. Nyamuneka usubize ikintu mumwanya wabigenewe.',
         "input_error" : 'Nyamuneka andika neza',
         "thanks" : 'Urakoze kugura!',
         "next" : 'Nyamuneka shyira ikintu gikurikira mumwanya wagenwe'
         },

    "e" : {"welcome" : 'welcome!', 
         "scan_start" : 'To scan the product, place it in the desired position and press "Enter".',
         "read_message" : 'Read an Item : {} Price : {}',
         "time" : '{}[s] has passed until the item is read.',
         "correct?" : 'Press "y" if the item read is correct, or "n" if it is incorrect. : ',
         "continue?" : 'Press "y" to continue scanning any items, "Enter" to check out, or "x" if you have items to cancel. : ',
         "cancel" : 'Enter the number of the product you want to cancel. : ',
         "total" : 'Total-Price: {}',
         "subtotal" : 'Subtotal : {}',
         "can_not_read" : 'It did not read correctly. Please reposition the item in the designated position.',
         "input_error" : 'Please input correctly',
         "thanks" : 'Thank you for buying!',
         "next" : 'Please put the next item in the specified position.'
         },

    "f" : {"welcome" : 'bienvenu!', 
         "scan_start" : 'Pour numériser le produit, placez-le dans la position souhaitée et appuyez sur «Entrée».',
         "read_message" : 'Lire un article: {} Prix: {}',
         "time" : "{}[s] est passé jusqu'à ce que l'élément soit lu.",
         "correct?" : "Appuyez sur «y» si l'élément lu est correct, ou «n» s'il est incorrect. : ",
         "continue?" : 'Appuyez sur «y» pour continuer la numérisation des éléments, sur «Entrée» pour vérifier ou sur «x» si vous avez des éléments à annuler. : ',
         "cancel" : 'Saisissez le numéro du produit que vous souhaitez annuler.: ',
         "total" : 'Prix-total: {}',
         "subtotal" : 'Sous-total : {}',
         "can_not_read" : "Il n'a pas lu correctement. Veuillez repositionner l'élément dans la position désignée.",
         "input_error" : 'Veuillez saisir correctement',
         "thanks" : "Merci d'avoir acheté!",
         "next" : "Veuillez mettre l'élément suivant dans la position spécifiée"
         },

    "j" : {"welcome" : 'いらっしゃいませ!', 
         "scan_start" : 'スキャンする場合は商品を指定の位置に置いて「Enter」を押して下さい。',
         "read_message" : '商品 : {} 値段 : {} が読み取られました',
         "time" : '商品を読み取るまで {}[s] 経過しました。',
         "correct?" : '読み取られた商品が正しい場合は「y」、誤っていた場合は「n」を押してください。 : ',
         "continue?" : '続けて商品をスキャンする場合は「y」、会計する場合は「f」、\n キャンセルする商品がある場合は「ｘ」を押して下さい。 : ',
         "cancel" : 'キャンセルする商品の番号を入力してください。 : ',
         "subtotal" : '小計 : {}',
         "total" : '合計　: {}',
         "can_not_read" : '正しく読み取れませんでした。商品を指定の位置に置き直してください。',
         "input_error" : '正しく入力されていません。',
         "thanks" : 'ご利用ありがとうございました！',
         "next" : '次の商品を指定の位置に置いてください。'
         }
    }
    
    # Enable if you want to debug
    # Check the length of each dictionary
    if debug:
        lang_list = ["k", "e", "f", "j"]
        # length
        kin = len(init_dict["k"])
        eng = len(init_dict["e"])
        fra = len(init_dict["f"])
        jpn = len(init_dict["j"])

        # keys
        kin_keys = list(init_dict["k"].keys())
        eng_keys = list(init_dict["e"].keys())
        fra_keys = list(init_dict["f"].keys())
        jpn_keys = list(init_dict["j"].keys())
        check_list = [kin_keys, eng_keys, fra_keys, jpn_keys]
        
        key_all = kin_keys + eng_keys + fra_keys + jpn_keys
        #print(key_all)
        diff_key = [x for x in set(key_all) if key_all.count(x) == len(lang_list)]
        if diff_key:
          print("KeyError : There is a key that is different from other lists.")

        for i, l in enumerate(check_list):
          diff = set(key_all) ^ set(l)
          if diff:
              print("{} : {}".format(lang_list[i], diff))

        if kin == eng == fra == jpn and not diff:
          pass
        elif kin == eng == fra == jpn and diff:
          print("\n Please　make sure the key type is the same")
          return
        else:
          print("LengthError : Some sentences can't be translated because the length of the dictionary is different.")
          print("---------")
          print("the length of each dict\n kin: {}, eng: {}, fra: {}, jpn: {}".format(kin, eng, fra, jpn))
          return


    #print(lang_dict)
    lang_dict = init_dict[lang]
    #print(tmp)
    sentense = lang_dict[scene]

    return sentense

if __name__ == '__main__':

  lang ="j"
  scene = "welcome"

  #lang ="e"
  #scene = "time"

  test = transrate_language(lang, scene)
  input(test)

language = "j"
scene = "thanks"
t = 10

input(transrate_language(language, scene))

